version: '3.9'

services:
  # Build the flows image
  prefect-flows:
    build:
      context: .
      dockerfile: Dockerfile.flow
    image: prefect-flows:latest
    depends_on:
      prefect-server:
        condition: service_healthy
    command: "python flows.py"
    environment:
      PREFECT_API_URL: http://prefect-server:4200/api
    networks:
      - prefect-network

  prefect-longrunning:
    build:
      context: .
      dockerfile: Dockerfile.longlived
    image: prefect-longrunning:latest
    command: "python serve_retrieve_github_stars.py"
    environment:
      PREFECT_API_URL: http://prefect-server:4200/api
    networks:
      - prefect-network
    depends_on:
      prefect-server:
        condition: service_healthy

  # PostgreSQL database for Prefect server
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: prefect
      POSTGRES_PASSWORD: prefect
      POSTGRES_DB: prefect
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - prefect-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U prefect" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  # Prefect server
  prefect-server:
    image: prefecthq/prefect:3-latest
    command: prefect server start --host 0.0.0.0
    environment:
      PREFECT_API_DATABASE_CONNECTION_URL: postgresql+asyncpg://prefect:prefect@postgres:5432/prefect
      PREFECT_API_URL: http://localhost:4200/api
    ports:
      - "4200:4200"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - prefect-network
    volumes:
      - prefect_data:/root/.prefect
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "python -c 'import requests; requests.get(\"http://localhost:4200/api/health\").raise_for_status()'" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Docker worker
  prefect-worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    image: prefect-worker:latest
    command: >
      sh -c "
        echo 'Waiting for Prefect server to be ready...' &&
        sleep 10 &&
        echo 'Starting worker...' &&
        prefect worker start --pool docker-pool --type docker
      "
    environment:
      PREFECT_API_URL: http://prefect-server:4200/api
      DOCKER_HOST: unix:///var/run/docker.sock
      PREFECT_LOGGING_LEVEL: DEBUG
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - prefect_data:/root/.prefect
    depends_on:
      prefect-server:
        condition: service_healthy
    networks:
      - prefect-network
    restart: unless-stopped

volumes:
  postgres_data:
  prefect_data:


networks:
  prefect-network:
    name: prefect-network
